ALTER SESSION SET CURRENT_SCHEMA = ADVENTUREWORKS;


-- 1. AdventureWorksDWBuildVersion
CREATE TABLE AdventureWorksDWBuildVersion (
    DBVersion VARCHAR2(50),
    VersionDate DATE
);

-- 2. DimAccount
CREATE TABLE DimAccount (
    AccountKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ParentAccountKey NUMBER,
    AccountCodeAlternateKey NUMBER,
    ParentAccountCodeAlternateKey NUMBER,
    AccountDescription VARCHAR2(50),
    AccountType VARCHAR2(50),
    Operator VARCHAR2(50),
    CustomMembers VARCHAR2(300),
    ValueType VARCHAR2(50),
    CustomMemberOptions VARCHAR2(200),
    CONSTRAINT pk_account PRIMARY KEY (AccountKey)
);

-- 3. DimCurrency
CREATE TABLE DimCurrency (
    CurrencyKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    CurrencyAlternateKey CHAR(3) NOT NULL,
    CurrencyName VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_currency PRIMARY KEY (CurrencyKey)
);

-- 4. DimCustomer
CREATE TABLE DimCustomer (
    CustomerKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    GeographyKey NUMBER,
    CustomerAlternateKey VARCHAR2(15) NOT NULL,
    Title VARCHAR2(8),
    FirstName VARCHAR2(50),
    MiddleName VARCHAR2(50),
    LastName VARCHAR2(50),
    NameStyle NUMBER(1),
    BirthDate DATE,
    MaritalStatus CHAR(1),
    Suffix VARCHAR2(10),
    Gender VARCHAR2(1),
    EmailAddress VARCHAR2(50),
    YearlyIncome NUMBER(10,2),
    TotalChildren NUMBER(3),
    NumberChildrenAtHome NUMBER(3),
    EnglishEducation VARCHAR2(40),
    SpanishEducation VARCHAR2(40),
    FrenchEducation VARCHAR2(40),
    EnglishOccupation VARCHAR2(100),
    SpanishOccupation VARCHAR2(100),
    FrenchOccupation VARCHAR2(100),
    HouseOwnerFlag CHAR(1),
    NumberCarsOwned NUMBER(3),
    AddressLine1 VARCHAR2(120),
    AddressLine2 VARCHAR2(120),
    Phone VARCHAR2(20),
    DateFirstPurchase DATE,
    CommuteDistance VARCHAR2(15),
    CONSTRAINT pk_customer PRIMARY KEY (CustomerKey)
);

-- 5. DimDate
CREATE TABLE DimDate (
    DateKey NUMBER NOT NULL,
    FullDateAlternateKey DATE NOT NULL,
    DayNumberOfWeek NUMBER(3) NOT NULL,
    EnglishDayNameOfWeek VARCHAR2(10) NOT NULL,
    SpanishDayNameOfWeek VARCHAR2(10) NOT NULL,
    FrenchDayNameOfWeek VARCHAR2(10) NOT NULL,
    DayNumberOfMonth NUMBER(3) NOT NULL,
    DayNumberOfYear NUMBER(5) NOT NULL,
    WeekNumberOfYear NUMBER(3) NOT NULL,
    EnglishMonthName VARCHAR2(10) NOT NULL,
    SpanishMonthName VARCHAR2(10) NOT NULL,
    FrenchMonthName VARCHAR2(10) NOT NULL,
    MonthNumberOfYear NUMBER(3) NOT NULL,
    CalendarQuarter NUMBER(3) NOT NULL,
    CalendarYear NUMBER(5) NOT NULL,
    CalendarSemester NUMBER(3) NOT NULL,
    FiscalQuarter NUMBER(3) NOT NULL,
    FiscalYear NUMBER(5) NOT NULL,
    FiscalSemester NUMBER(3) NOT NULL,
    CONSTRAINT pk_date PRIMARY KEY (DateKey)
);

-- 6. DimDepartmentGroup
CREATE TABLE DimDepartmentGroup (
    DepartmentGroupKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ParentDepartmentGroupKey NUMBER,
    DepartmentGroupName VARCHAR2(50),
    CONSTRAINT pk_department_group PRIMARY KEY (DepartmentGroupKey)
);

-- 7. DimEmployee
CREATE TABLE DimEmployee (
    EmployeeKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ParentEmployeeKey NUMBER,
    EmployeeNationalIDAlternateKey VARCHAR2(15),
    ParentEmployeeNationalIDAlternateKey VARCHAR2(15),
    SalesTerritoryKey NUMBER,
    FirstName VARCHAR2(50) NOT NULL,
    LastName VARCHAR2(50) NOT NULL,
    MiddleName VARCHAR2(50),
    NameStyle NUMBER(1) NOT NULL,
    Title VARCHAR2(50),
    HireDate DATE,
    BirthDate DATE,
    LoginID VARCHAR2(256),
    EmailAddress VARCHAR2(50),
    Phone VARCHAR2(25),
    MaritalStatus CHAR(1),
    EmergencyContactName VARCHAR2(50),
    EmergencyContactPhone VARCHAR2(25),
    SalariedFlag NUMBER(1),
    Gender CHAR(1),
    PayFrequency NUMBER(3),
    BaseRate NUMBER(10,2),
    VacationHours NUMBER(5),
    SickLeaveHours NUMBER(5),
    CurrentFlag NUMBER(1) NOT NULL,
    SalesPersonFlag NUMBER(1) NOT NULL,
    DepartmentName VARCHAR2(50),
    StartDate DATE,
    EndDate DATE,
    Status VARCHAR2(50),
    EmployeePhoto BLOB,
    CONSTRAINT pk_employee PRIMARY KEY (EmployeeKey)
);

-- 8. DimGeography
CREATE TABLE DimGeography (
    GeographyKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    City VARCHAR2(30),
    StateProvinceCode VARCHAR2(3),
    StateProvinceName VARCHAR2(50),
    CountryRegionCode VARCHAR2(3),
    EnglishCountryRegionName VARCHAR2(50),
    SpanishCountryRegionName VARCHAR2(50),
    FrenchCountryRegionName VARCHAR2(50),
    PostalCode VARCHAR2(15),
    SalesTerritoryKey NUMBER,
    IpAddressLocator VARCHAR2(15),
    CONSTRAINT pk_geography PRIMARY KEY (GeographyKey)
);

-- 9. DimOrganization
CREATE TABLE DimOrganization (
    OrganizationKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ParentOrganizationKey NUMBER,
    PercentageOfOwnership VARCHAR2(16),
    OrganizationName VARCHAR2(50),
    CurrencyKey NUMBER,
    CONSTRAINT pk_organization PRIMARY KEY (OrganizationKey)
);

-- 10. DimProduct
CREATE TABLE DimProduct (
    ProductKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ProductAlternateKey VARCHAR2(25),
    ProductSubcategoryKey NUMBER,
    WeightUnitMeasureCode CHAR(3),
    SizeUnitMeasureCode CHAR(3),
    EnglishProductName VARCHAR2(50) NOT NULL,
    SpanishProductName VARCHAR2(50) NOT NULL,
    FrenchProductName VARCHAR2(50) NOT NULL,
    StandardCost NUMBER(10,2),
    FinishedGoodsFlag NUMBER(1) NOT NULL,
    Color VARCHAR2(15) NOT NULL,
    SafetyStockLevel NUMBER(5),
    ReorderPoint NUMBER(5),
    ListPrice NUMBER(10,2),
    Size VARCHAR2(50),
    SizeRange VARCHAR2(50),
    Weight NUMBER(10,2),
    DaysToManufacture NUMBER,
    ProductLine CHAR(2),
    DealerPrice NUMBER(10,2),
    Class CHAR(2),
    Style CHAR(2),
    ModelName VARCHAR2(50),
    LargePhoto BLOB,
    EnglishDescription VARCHAR2(400),
    StartDate DATE,
    EndDate DATE,
    Status VARCHAR2(7),
    CONSTRAINT pk_product PRIMARY KEY (ProductKey)
);

-- Remaining Tables (11-35)...

-- 11. DimProductCategory
CREATE TABLE DimProductCategory (
    ProductCategoryKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ProductCategoryAlternateKey NUMBER,
    EnglishProductCategoryName VARCHAR2(50) NOT NULL,
    SpanishProductCategoryName VARCHAR2(50) NOT NULL,
    FrenchProductCategoryName VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_product_category PRIMARY KEY (ProductCategoryKey)
);

-- 12. DimProductSubcategory
CREATE TABLE DimProductSubcategory (
    ProductSubcategoryKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ProductSubcategoryAlternateKey NUMBER,
    EnglishProductSubcategoryName VARCHAR2(50) NOT NULL,
    SpanishProductSubcategoryName VARCHAR2(50) NOT NULL,
    FrenchProductSubcategoryName VARCHAR2(50) NOT NULL,
    ProductCategoryKey NUMBER,
    CONSTRAINT pk_product_subcategory PRIMARY KEY (ProductSubcategoryKey)
);

-- 13. DimPromotion
CREATE TABLE DimPromotion (
    PromotionKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    PromotionAlternateKey NUMBER,
    EnglishPromotionName VARCHAR2(255),
    SpanishPromotionName VARCHAR2(255),
    FrenchPromotionName VARCHAR2(255),
    DiscountPct NUMBER(5,2),
    EnglishPromotionType VARCHAR2(50),
    SpanishPromotionType VARCHAR2(50),
    FrenchPromotionType VARCHAR2(50),
    EnglishPromotionCategory VARCHAR2(50),
    SpanishPromotionCategory VARCHAR2(50),
    FrenchPromotionCategory VARCHAR2(50),
    StartDate DATE NOT NULL,
    EndDate DATE,
    MinQty NUMBER,
    MaxQty NUMBER,
    CONSTRAINT pk_promotion PRIMARY KEY (PromotionKey)
);

-- 14. DimReseller
CREATE TABLE DimReseller (
    ResellerKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    GeographyKey NUMBER,
    ResellerAlternateKey VARCHAR2(15),
    Phone VARCHAR2(25),
    BusinessType VARCHAR2(20) NOT NULL,
    ResellerName VARCHAR2(50) NOT NULL,
    NumberEmployees NUMBER,
    OrderFrequency CHAR(1),
    OrderMonth NUMBER(3),
    FirstOrderYear NUMBER(5),
    LastOrderYear NUMBER(5),
    ProductLine VARCHAR2(50),
    AddressLine1 VARCHAR2(60),
    AddressLine2 VARCHAR2(60),
    AnnualSales NUMBER(15,2),
    BankName VARCHAR2(50),
    MinPaymentType NUMBER,
    MinPaymentAmount NUMBER(15,2),
    AnnualRevenue NUMBER(15,2),
    YearOpened NUMBER,
    CONSTRAINT pk_reseller PRIMARY KEY (ResellerKey)
);

-- 15. DimSalesReason
CREATE TABLE DimSalesReason (
    SalesReasonKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    SalesReasonAlternateKey NUMBER NOT NULL,
    SalesReasonName VARCHAR2(50) NOT NULL,
    SalesReasonReasonType VARCHAR2(50) NOT NULL,
    CONSTRAINT pk_sales_reason PRIMARY KEY (SalesReasonKey)
);

-- 16. DimSalesTerritory
CREATE TABLE DimSalesTerritory (
    SalesTerritoryKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    SalesTerritoryAlternateKey NUMBER,
    SalesTerritoryRegion VARCHAR2(50) NOT NULL,
    SalesTerritoryCountry VARCHAR2(50) NOT NULL,
    SalesTerritoryGroup VARCHAR2(50),
    SalesTerritoryImage BLOB,
    CONSTRAINT pk_sales_territory PRIMARY KEY (SalesTerritoryKey)
);

-- 17. DimScenario
CREATE TABLE DimScenario (
    ScenarioKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ScenarioName VARCHAR2(50),
    CONSTRAINT pk_scenario PRIMARY KEY (ScenarioKey)
);

-- 18. FactAdditionalInternationalProductDescription
CREATE TABLE FactAdditionalInternationalProductDescription (
    ProductKey NUMBER NOT NULL,
    CultureName VARCHAR2(50) NOT NULL,
    ProductDescription CLOB NOT NULL,
    CONSTRAINT pk_additional_product_description PRIMARY KEY (ProductKey, CultureName)
);

-- 19. FactCallCenter
CREATE TABLE FactCallCenter (
    FactCallCenterID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    DateKey NUMBER NOT NULL,
    WageType VARCHAR2(15) NOT NULL,
    Shift VARCHAR2(20) NOT NULL,
    LevelOneOperators NUMBER(5) NOT NULL,
    LevelTwoOperators NUMBER(5) NOT NULL,
    TotalOperators NUMBER(5) NOT NULL,
    Calls NUMBER NOT NULL,
    AutomaticResponses NUMBER NOT NULL,
    Orders NUMBER NOT NULL,
    IssuesRaised NUMBER(5) NOT NULL,
    AverageTimePerIssue NUMBER(5) NOT NULL,
    ServiceGrade NUMBER(5,2) NOT NULL,
    Date DATE,
    CONSTRAINT pk_call_center PRIMARY KEY (FactCallCenterID)
);

-- 20. FactCurrencyRate
CREATE TABLE FactCurrencyRate (
    CurrencyKey NUMBER NOT NULL,
    DateKey NUMBER NOT NULL,
    AverageRate NUMBER(10,5) NOT NULL,
    EndOfDayRate NUMBER(10,5) NOT NULL,
    Date DATE,
    CONSTRAINT pk_currency_rate PRIMARY KEY (CurrencyKey, DateKey)
);

-- 21. FactFinance
CREATE TABLE FactFinance (
    FinanceKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    DateKey NUMBER NOT NULL,
    OrganizationKey NUMBER NOT NULL,
    DepartmentGroupKey NUMBER NOT NULL,
    ScenarioKey NUMBER NOT NULL,
    AccountKey NUMBER NOT NULL,
    Amount NUMBER(15,2) NOT NULL,
    Date DATE,
    CONSTRAINT pk_finance PRIMARY KEY (FinanceKey)
);

-- 22. FactInternetSales
CREATE TABLE FactInternetSales (
    ProductKey NUMBER NOT NULL,
    OrderDateKey NUMBER NOT NULL,
    DueDateKey NUMBER NOT NULL,
    ShipDateKey NUMBER NOT NULL,
    CustomerKey NUMBER NOT NULL,
    PromotionKey NUMBER NOT NULL,
    CurrencyKey NUMBER NOT NULL,
    SalesTerritoryKey NUMBER NOT NULL,
    SalesOrderNumber VARCHAR2(20) NOT NULL,
    SalesOrderLineNumber NUMBER(3) NOT NULL,
    RevisionNumber NUMBER(3) NOT NULL,
    OrderQuantity NUMBER(5) NOT NULL,
    UnitPrice NUMBER(15,2) NOT NULL,
    ExtendedAmount NUMBER(15,2) NOT NULL,
    UnitPriceDiscountPct NUMBER(5,2) NOT NULL,
    DiscountAmount NUMBER(15,2) NOT NULL,
    ProductStandardCost NUMBER(15,2) NOT NULL,
    TotalProductCost NUMBER(15,2) NOT NULL,
    SalesAmount NUMBER(15,2) NOT NULL,
    TaxAmt NUMBER(15,2) NOT NULL,
    Freight NUMBER(15,2) NOT NULL,
    CarrierTrackingNumber VARCHAR2(25),
    CustomerPONumber VARCHAR2(25),
    OrderDate DATE,
    DueDate DATE,
    ShipDate DATE,
    CONSTRAINT pk_internet_sales PRIMARY KEY (SalesOrderNumber, SalesOrderLineNumber)
);

-- 23. FactInternetSalesReason
CREATE TABLE FactInternetSalesReason (
    SalesOrderNumber VARCHAR2(20) NOT NULL,
    SalesOrderLineNumber NUMBER(3) NOT NULL,
    SalesReasonKey NUMBER NOT NULL,
    CONSTRAINT pk_internet_sales_reason PRIMARY KEY (SalesOrderNumber, SalesOrderLineNumber, SalesReasonKey)
);

-- 24. FactProductInventory
CREATE TABLE FactProductInventory (
    ProductKey NUMBER NOT NULL,
    DateKey NUMBER NOT NULL,
    MovementDate DATE NOT NULL,
    UnitCost NUMBER(15,2) NOT NULL,
    UnitsIn NUMBER NOT NULL,
    UnitsOut NUMBER NOT NULL,
    UnitsBalance NUMBER NOT NULL,
    CONSTRAINT pk_product_inventory PRIMARY KEY (ProductKey, DateKey)
);

-- 25. FactResellerSales
CREATE TABLE FactResellerSales (
    ProductKey NUMBER NOT NULL,
    OrderDateKey NUMBER NOT NULL,
    DueDateKey NUMBER NOT NULL,
    ShipDateKey NUMBER NOT NULL,
    ResellerKey NUMBER NOT NULL,
    EmployeeKey NUMBER NOT NULL,
    PromotionKey NUMBER NOT NULL,
    CurrencyKey NUMBER NOT NULL,
    SalesTerritoryKey NUMBER NOT NULL,
    SalesOrderNumber VARCHAR2(20) NOT NULL,
    SalesOrderLineNumber NUMBER(3) NOT NULL,
    RevisionNumber NUMBER(3),
    OrderQuantity NUMBER(5),
    UnitPrice NUMBER(15,2),
    ExtendedAmount NUMBER(15,2),
    UnitPriceDiscountPct NUMBER(5,2),
    DiscountAmount NUMBER(15,2),
    ProductStandardCost NUMBER(15,2),
    TotalProductCost NUMBER(15,2),
    SalesAmount NUMBER(15,2),
    TaxAmt NUMBER(15,2),
    Freight NUMBER(15,2),
    CarrierTrackingNumber VARCHAR2(25),
    CustomerPONumber VARCHAR2(25),
    OrderDate DATE,
    DueDate DATE,
    ShipDate DATE,
    CONSTRAINT pk_reseller_sales PRIMARY KEY (SalesOrderNumber, SalesOrderLineNumber)
);

-- 26. FactSalesQuota
CREATE TABLE FactSalesQuota (
    SalesQuotaKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    EmployeeKey NUMBER NOT NULL,
    DateKey NUMBER NOT NULL,
    CalendarYear NUMBER(5) NOT NULL,
    CalendarQuarter NUMBER(3) NOT NULL,
    SalesAmountQuota NUMBER(15,2) NOT NULL,
    Date DATE,
    CONSTRAINT pk_sales_quota PRIMARY KEY (SalesQuotaKey)
);

-- 27. FactSurveyResponse
CREATE TABLE FactSurveyResponse (
    SurveyResponseKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    DateKey NUMBER NOT NULL,
    CustomerKey NUMBER NOT NULL,
    ProductCategoryKey NUMBER NOT NULL,
    EnglishProductCategoryName VARCHAR2(50) NOT NULL,
    ProductSubcategoryKey NUMBER NOT NULL,
    EnglishProductSubcategoryName VARCHAR2(50) NOT NULL,
    Date DATE,
    CONSTRAINT pk_survey_response PRIMARY KEY (SurveyResponseKey)
);

-- 28. NewFactCurrencyRate
CREATE TABLE NewFactCurrencyRate (
    AverageRate NUMBER(10,5),
    CurrencyID CHAR(3),
    CurrencyDate DATE,
    EndOfDayRate NUMBER(10,5),
    CurrencyKey NUMBER,
    DateKey NUMBER
);

-- 29. ProspectiveBuyer
CREATE TABLE ProspectiveBuyer (
    ProspectiveBuyerKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    ProspectAlternateKey VARCHAR2(15),
    FirstName VARCHAR2(50),
    MiddleName VARCHAR2(50),
    LastName VARCHAR2(50),
    BirthDate DATE,
    MaritalStatus CHAR(1),
    Gender VARCHAR2(1),
    EmailAddress VARCHAR2(50),
    YearlyIncome NUMBER(10,2),
    TotalChildren NUMBER(3),
    NumberChildrenAtHome NUMBER(3),
    Education VARCHAR2(40),
    Occupation VARCHAR2(100),
    HouseOwnerFlag CHAR(1),
    NumberCarsOwned NUMBER(3),
    AddressLine1 VARCHAR2(120),
    AddressLine2 VARCHAR2(120),
    City VARCHAR2(30),
    StateProvinceCode VARCHAR2(3),
    PostalCode VARCHAR2(15),
    Phone VARCHAR2(20),
    Salutation VARCHAR2(8),
    Unknown NUMBER
);

-- 30. sysdiagrams
CREATE TABLE sysdiagrams (
    Name VARCHAR2(128) NOT NULL,
    Principal_ID NUMBER NOT NULL,
    Diagram_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    Version NUMBER,
    Definition BLOB
);

-- 31-35 (Continue for the rest as needed)...

-- 31. DatabaseLog
CREATE TABLE DatabaseLog (
    DatabaseLogID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    PostTime DATE NOT NULL,
    DatabaseUser VARCHAR2(128) NOT NULL,
    Event VARCHAR2(128) NOT NULL,
    Schema VARCHAR2(128),
    Object VARCHAR2(128),
    TSQL CLOB NOT NULL,
    XmlEvent CLOB NOT NULL,
    CONSTRAINT pk_database_log PRIMARY KEY (DatabaseLogID)
);

-- 32. FactInternetSalesReason
CREATE TABLE FactInternetSalesReason (
    SalesOrderNumber VARCHAR2(20) NOT NULL,
    SalesOrderLineNumber NUMBER(3) NOT NULL,
    SalesReasonKey NUMBER NOT NULL,
    CONSTRAINT pk_internet_sales_reason PRIMARY KEY (SalesOrderNumber, SalesOrderLineNumber, SalesReasonKey)
);

-- 33. FactProductInventory
CREATE TABLE FactProductInventory (
    ProductKey NUMBER NOT NULL,
    DateKey NUMBER NOT NULL,
    MovementDate DATE NOT NULL,
    UnitCost NUMBER(15,2) NOT NULL,
    UnitsIn NUMBER NOT NULL,
    UnitsOut NUMBER NOT NULL,
    UnitsBalance NUMBER NOT NULL,
    CONSTRAINT pk_product_inventory PRIMARY KEY (ProductKey, DateKey)
);

-- 34. FactResellerSales
CREATE TABLE FactResellerSales (
    ProductKey NUMBER NOT NULL,
    OrderDateKey NUMBER NOT NULL,
    DueDateKey NUMBER NOT NULL,
    ShipDateKey NUMBER NOT NULL,
    ResellerKey NUMBER NOT NULL,
    EmployeeKey NUMBER NOT NULL,
    PromotionKey NUMBER NOT NULL,
    CurrencyKey NUMBER NOT NULL,
    SalesTerritoryKey NUMBER NOT NULL,
    SalesOrderNumber VARCHAR2(20) NOT NULL,
    SalesOrderLineNumber NUMBER(3) NOT NULL,
    RevisionNumber NUMBER(3),
    OrderQuantity NUMBER(5),
    UnitPrice NUMBER(15,2),
    ExtendedAmount NUMBER(15,2),
    UnitPriceDiscountPct NUMBER(5,2),
    DiscountAmount NUMBER(15,2),
    ProductStandardCost NUMBER(15,2),
    TotalProductCost NUMBER(15,2),
    SalesAmount NUMBER(15,2),
    TaxAmt NUMBER(15,2),
    Freight NUMBER(15,2),
    CarrierTrackingNumber VARCHAR2(25),
    CustomerPONumber VARCHAR2(25),
    OrderDate DATE,
    DueDate DATE,
    ShipDate DATE,
    CONSTRAINT pk_reseller_sales PRIMARY KEY (SalesOrderNumber, SalesOrderLineNumber)
);

-- 35. FactSurveyResponse
CREATE TABLE FactSurveyResponse (
    SurveyResponseKey NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,
    DateKey NUMBER NOT NULL,
    CustomerKey NUMBER NOT NULL,
    ProductCategoryKey NUMBER NOT NULL,
    EnglishProductCategoryName VARCHAR2(50) NOT NULL,
    ProductSubcategoryKey NUMBER NOT NULL,
    EnglishProductSubcategoryName VARCHAR2(50) NOT NULL,
    Date DATE,
    CONSTRAINT pk_survey_response PRIMARY KEY (SurveyResponseKey)
);



CREATE OR REPLACE VIEW vDMPrep AS
SELECT
    pc.EnglishProductCategoryName,
    NVL(p.ModelName, p.EnglishProductName) AS Model,
    c.CustomerKey,
    s.SalesTerritoryGroup AS Region,
    CASE
        WHEN EXTRACT(MONTH FROM SYSDATE) < EXTRACT(MONTH FROM c.BirthDate) THEN
            EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM c.BirthDate) - 1
        WHEN EXTRACT(MONTH FROM SYSDATE) = EXTRACT(MONTH FROM c.BirthDate) AND
             EXTRACT(DAY FROM SYSDATE) < EXTRACT(DAY FROM c.BirthDate) THEN
            EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM c.BirthDate) - 1
        ELSE
            EXTRACT(YEAR FROM SYSDATE) - EXTRACT(YEAR FROM c.BirthDate)
    END AS Age,
    CASE
        WHEN c.YearlyIncome < 40000 THEN 'Low'
        WHEN c.YearlyIncome > 60000 THEN 'High'
        ELSE 'Moderate'
    END AS IncomeGroup,
    d.CalendarYear,
    d.FiscalYear,
    d.MonthNumberOfYear AS Month,
    f.SalesOrderNumber AS OrderNumber,
    f.SalesOrderLineNumber AS LineNumber,
    f.OrderQuantity AS Quantity,
    f.ExtendedAmount AS Amount
FROM
    FactInternetSales f
    INNER JOIN DimDate d ON f.OrderDateKey = d.DateKey
    INNER JOIN DimProduct p ON f.ProductKey = p.ProductKey
    INNER JOIN DimProductSubcategory psc ON p.ProductSubcategoryKey = psc.ProductSubcategoryKey
    INNER JOIN DimProductCategory pc ON psc.ProductCategoryKey = pc.ProductCategoryKey
    INNER JOIN DimCustomer c ON f.CustomerKey = c.CustomerKey
    INNER JOIN DimGeography g ON c.GeographyKey = g.GeographyKey
    INNER JOIN DimSalesTerritory s ON g.SalesTerritoryKey = s.SalesTerritoryKey;


CREATE OR REPLACE VIEW vTimeSeries AS
SELECT
    CASE Model
        WHEN 'Mountain-100' THEN 'M200'
        WHEN 'Road-150' THEN 'R250'
        WHEN 'Road-650' THEN 'R750'
        WHEN 'Touring-1000' THEN 'T1000'
        ELSE SUBSTR(Model, 1, 1) || SUBSTR(Model, -3)
    END || ' ' || Region AS ModelRegion,
    (TO_NUMBER(CalendarYear) * 100) + TO_NUMBER(Month) AS TimeIndex,
    SUM(Quantity) AS Quantity,
    SUM(Amount) AS Amount,
    CalendarYear,
    Month,
    TO_DATE(CalendarYear || '-' || LPAD(Month, 2, '0') || '-25', 'YYYY-MM-DD') AS ReportingDate
FROM
    vDMPrep
WHERE
    Model IN ('Mountain-100', 'Mountain-200', 'Road-150', 'Road-250', 'Road-650', 'Road-750', 'Touring-1000')
GROUP BY
    CASE Model
        WHEN 'Mountain-100' THEN 'M200'
        WHEN 'Road-150' THEN 'R250'
        WHEN 'Road-650' THEN 'R750'
        WHEN 'Touring-1000' THEN 'T1000'
        ELSE SUBSTR(Model, 1, 1) || SUBSTR(Model, -3)
    END || ' ' || Region,
    (TO_NUMBER(CalendarYear) * 100) + TO_NUMBER(Month),
   

CREATE OR REPLACE VIEW vTargetMail AS
SELECT
    c.CustomerKey,
    c.GeographyKey,
    c.CustomerAlternateKey,
    c.Title,
    c.FirstName,
    c.MiddleName,
    c.LastName,
    c.NameStyle,
    c.BirthDate,
    c.MaritalStatus,
    c.Suffix,
    c.Gender,
    c.EmailAddress,
    c.YearlyIncome,
    c.TotalChildren,
    c.NumberChildrenAtHome,
    c.EnglishEducation,
    c.SpanishEducation,
    c.FrenchEducation,
    c.EnglishOccupation,
    c.SpanishOccupation,
    c.FrenchOccupation,
    c.HouseOwnerFlag,
    c.NumberCarsOwned,
    c.AddressLine1,
    c.AddressLine2,
    c.Phone,
    c.DateFirstPurchase,
    c.CommuteDistance,
    x.Region,
    x.Age,
    CASE
        WHEN x.Bikes = 0 THEN 0
        ELSE 1
    END AS BikeBuyer
FROM
    DimCustomer c
    INNER JOIN (
        SELECT
            CustomerKey,
            Region,
            Age,
            SUM(CASE WHEN EnglishProductCategoryName = 'Bikes' THEN 1 ELSE 0 END) AS Bikes
        FROM
            vDMPrep
        GROUP BY
            CustomerKey,
            Region,
            Age
    ) x ON c.CustomerKey = x.CustomerKey;


CREATE OR REPLACE VIEW vAssocSeqOrders AS
SELECT DISTINCT
    OrderNumber,
    CustomerKey,
    Region,
    IncomeGroup
FROM
    vDMPrep
WHERE
    FiscalYear = 2013;


CREATE OR REPLACE VIEW vAssocSeqLineItems AS
SELECT
    OrderNumber,
    LineNumber,
    Model
FROM
    vDMPrep
WHERE
    FiscalYear = 2013;


